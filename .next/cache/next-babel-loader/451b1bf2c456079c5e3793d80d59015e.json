{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/rickmagno/Desktop/MYDAILYSTATUS/pages/app.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport router from 'next/router';\nimport { distance } from '../';\n\nvar App = function App(props) {\n  useEffect(function () {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, \"Status pr\\xF3ximos a voc\\xEA:\"), __jsx(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, props.chekins.map(function (chekin) {\n    return __jsx(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    }, \" \", checkin.id, \" \"), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }\n    }, \" \", checkin.status, \" \"), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }\n    }, \" \", JSON.stringify(checkin.coords), \" \"));\n  })));\n};\n\nexport var __N_SSP = true;\nexport default App;","map":{"version":3,"sources":["/Users/rickmagno/Desktop/MYDAILYSTATUS/pages/app.js"],"names":["React","useEffect","router","distance","App","props","isAuth","push","forceCreate","chekins","map","chekin","checkin","id","status","JSON","stringify","coords"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,QAAT,QAAyB,KAAzB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AACjBJ,EAAAA,SAAS,CAAE,YAAM;AACb,QAAG,CAACI,KAAK,CAACC,MAAV,EAAkB;AACdJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACH,KAFD,MAEO,IAAGF,KAAK,CAACG,WAAT,EAAqB;AACxBN,MAAAA,MAAM,CAACK,IAAP,CAAY,gBAAZ;AACH;AACJ,GANQ,CAAT;;AAOA,MAAI,CAACF,KAAK,CAACC,MAAP,IAAiBD,KAAK,CAACG,WAA3B,EAAwC;AACpC,WAAO,IAAP;AACH;;AACD,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,KAAK,CAACI,OAAN,CAAcC,GAAd,CAAkB,UAAAC,MAAM,EAAI;AAC1B,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMC,OAAO,CAACC,EAAd,MADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMD,OAAO,CAACE,MAAd,MAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMC,IAAI,CAACC,SAAL,CAAeJ,OAAO,CAACK,MAAvB,CAAN,MAHH,CADJ;AAQH,GATC,CADF,CAFA,CADA;AAkBH,CA7BD;;;AA8BA,eAAeb,GAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport auth0 from '../lib/auth0'\nimport router from 'next/router'\nimport { db } from '../lib/db'\nimport { distance } from '../'\n \nconst App = props => {\n    useEffect (() => {\n        if(!props.isAuth) {\n            router.push('/')\n        } else if(props.forceCreate){\n            router.push('/create-status')\n        }\n    })\n    if (!props.isAuth || props.forceCreate) {\n        return null\n    }\n    return (\n    <div>\n    <h1>Status próximos a você:</h1>\n    <table>\n    { props.chekins.map(chekin => {\n        return (\n            <tr>\n               <td> {checkin.id} </td>\n               <td> {checkin.status} </td>\n               <td> {JSON.stringify(checkin.coords)} </td>\n            </tr>\n\n        )\n    })\n    }\n    </table>      \n    </div>\n    )\n}\nexport default App\n\nexport async function getServerSideProps({ req, res}) {\n    const session = await auth0.getSession(req)\n    if(session) {\n        const today = new Date()\n        const currentDate = \n        today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\n\n        const todaysCheckin = await db\n        .collection('markers')\n        .doc (currentDate)\n        .collection('checks')\n        .doc(session.user.sub)\n        .get()\n    const todaysData = todaysCheckin.data()\n    let forceCreate = true\n    if(todaysData){\n       \n        forceCreate = false\n        const checkins = await db\n        .collection('markers')\n        .doc (currentDate)\n        .collection('checks')\n        .near({\n            center: todaysData.coordinates,\n            radius: 1000\n        })\n        .get()\n        const checkinsList = []\n       checkins.docs.forEach(doc => {\n          checkinsList.push({\n              id: doc.id,\n              status: doc.data().status,\n              coords: {\n                  lat: doc.data().coordinates.latitude,\n                  long: doc.data().coordinates.longitude\n              }\n          })\n       })\n    }\n        return {\n            props: {\n                isAuth: true,\n                user: session.user,\n                forceCreate: false,\n                checkins: checkinsList\n            }\n        }\n    }\n  \n    return {\n        props: {\n            isAuth: false,\n            user: {}\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}